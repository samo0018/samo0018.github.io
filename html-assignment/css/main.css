/* apply a BG color to the whole page (or the body tag) */

body{
    background-color:cadetblue;
    /* changing the font family - always provide a list of fallbacks*/
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif
}

/* target ALL paragraphs and h2 tags to be a specific font color 
CSS specificity of 0001 - ONE tag
*/

p, h2{
    color: silver; 
    /* add a border to all the paragraphs 
    border is a short-hand with 3 values, colour, size, style
    spaces mean you are applying all 3 values
    */
    border:indianred 5px solid; 
}

/* specifically targets the paragraph inside the footer 
CSS specificity of 0002 - TWO tags
*/

footer p{
    color: white;
    font-size: 10px;
}

/*target an element based on its CLASS (using class "larger")
use a dot . 
a class can be used on MULTIPLE elements on page 
CSS specificity of 0010 - ONE class
*/

.larger{
    font-size:24px;
}

/* target an element based on it's ID - use a #
And ID should be unique (only one element on the page should have it) 
CSS specificity of 0100 - ONE ID
*/

#play{
    font-weight: bold;
    font-size: 20px;
}

/* use an "attribute selector" to target only .jpg images 
$= means "ends with" - we are looking for image tags whose source ends with "jpg" 
*/

img[src$="jpg"]{
    width:200px;
}

/* "pseudo classes" can be used to target the states of elements
for example: the "visited" states of an anchor tag
*/

a:visited{
    color:rgb(106, 202, 51);
}

/* only links have a visited state, but any element can have a HOVER state */

a:hover{
    color:violet;
}

/* use a "pseudo class" to target an element based on its position in another element:
can do last-child, first-child, nth-child() 
*/

p:last-child{
    font-style:italic;
}

/* "nth-child" styles multiple elements (based on their position)
the formula:
nth-child (5) - will ONLY style the 5th tag 
nth-child(2n) - styles every element STARTING WITH the second element
nth-child (2n-1) - styles EVERY OTHER element, starting with the first element
*/

li:nth-child(2n-1){
    background-color: plum;
}

/* inline vs block elements */
/* section is a block element - it takes up whole line by default and pushes
other elements down to the next line */

section{
    width: 400px;
    height: 200px;
    background-color: rebeccapurple;
}
nav{
    /* by default, a block elements takes up the width of the page
    or the element which is inside of it*/
    background-color: goldenrod;
}

span{
    /* inline elements can't have a width and a height
    so your browser will ignore these properties*/
    width: 100px;
    height: 100px;
    /* 
    RGB: 3 numbers (btwn 0-255)
        (each number represents red, green & blue)
    RGBA: adds a 4th number value (btwn 0.0-1.0) for transparency
    */
    background-color: rgba(255, 128, 200, .6);
}
